Determining if the pthread_create exist failed with the following output:
Change Dir: /home/justin/turtlebot3/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_37ae0/fast"
/usr/bin/make -f CMakeFiles/cmTC_37ae0.dir/build.make CMakeFiles/cmTC_37ae0.dir/build
make[1]: Entering directory '/home/justin/turtlebot3/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_37ae0.dir/CheckSymbolExists.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_37ae0.dir/CheckSymbolExists.c.o   -c /home/justin/turtlebot3/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_37ae0
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_37ae0.dir/link.txt --verbose=1
/usr/bin/cc      -rdynamic CMakeFiles/cmTC_37ae0.dir/CheckSymbolExists.c.o  -o cmTC_37ae0 
CMakeFiles/cmTC_37ae0.dir/CheckSymbolExists.c.o: 於函式 main:
CheckSymbolExists.c:(.text+0x1b): 未定義參考到 pthread_create
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_37ae0.dir/build.make:97: recipe for target 'cmTC_37ae0' failed
make[1]: *** [cmTC_37ae0] Error 1
make[1]: Leaving directory '/home/justin/turtlebot3/build/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_37ae0/fast' failed
make: *** [cmTC_37ae0/fast] Error 2

File /home/justin/turtlebot3/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <pthread.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef pthread_create
  return ((int*)(&pthread_create))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the function pthread_create exists in the pthreads failed with the following output:
Change Dir: /home/justin/turtlebot3/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_10571/fast"
/usr/bin/make -f CMakeFiles/cmTC_10571.dir/build.make CMakeFiles/cmTC_10571.dir/build
make[1]: Entering directory '/home/justin/turtlebot3/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_10571.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create   -o CMakeFiles/cmTC_10571.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.10/Modules/CheckFunctionExists.c
Linking C executable cmTC_10571
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_10571.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=pthread_create    -rdynamic CMakeFiles/cmTC_10571.dir/CheckFunctionExists.c.o  -o cmTC_10571 -lpthreads 
/usr/bin/ld: 找不到 -lpthreads
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_10571.dir/build.make:97: recipe for target 'cmTC_10571' failed
make[1]: *** [cmTC_10571] Error 1
make[1]: Leaving directory '/home/justin/turtlebot3/build/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_10571/fast' failed
make: *** [cmTC_10571/fast] Error 2


Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /home/justin/turtlebot3/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make -f Makefile cmTC_dd623/fast && /usr/bin/make  -f CMakeFiles/cmTC_dd623.dir/build.make CMakeFiles/cmTC_dd623.dir/build
make[1]: Entering directory '/home/justin/turtlebot3/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_dd623.dir/src.c.o
/usr/bin/cc -DCMAKE_HAVE_LIBC_PTHREAD   -o CMakeFiles/cmTC_dd623.dir/src.c.o -c /home/justin/turtlebot3/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_dd623
/usr/local/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd623.dir/link.txt --verbose=1
/usr/bin/cc -rdynamic CMakeFiles/cmTC_dd623.dir/src.c.o -o cmTC_dd623 
CMakeFiles/cmTC_dd623.dir/src.c.o: 於函式 main:
src.c:(.text+0x3e): 未定義參考到 pthread_create
src.c:(.text+0x4a): 未定義參考到 pthread_detach
src.c:(.text+0x56): 未定義參考到 pthread_cancel
src.c:(.text+0x67): 未定義參考到 pthread_join
src.c:(.text+0x7b): 未定義參考到 pthread_atfork
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_dd623.dir/build.make:98: recipe for target 'cmTC_dd623' failed
make[1]: *** [cmTC_dd623] Error 1
make[1]: Leaving directory '/home/justin/turtlebot3/build/CMakeFiles/CMakeTmp'
Makefile:127: recipe for target 'cmTC_dd623/fast' failed
make: *** [cmTC_dd623/fast] Error 2


Source file was:
#include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

